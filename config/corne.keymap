/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_da.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            quick-tap-ms = <200>;
        };

        shifthr: shifthr {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFTHR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <185>;
            flavor = "tap-preferred";
            quick-tap-ms = <185>;
        };

        weak: weak {
            compatible = "zmk,behavior-hold-tap";
            label = "WEAK";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            quick-tap-ms = <230>;
        };

        backspace: backspace {
            compatible = "zmk,behavior-tap-dance";
            label = "BACKSPACE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp LC(BACKSPACE)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps {
            bindings = <&kp CAPS>;
            key-positions = <16 19>;
        };

        jk_fix {
            bindings = <&kp ESCAPE>;
            key-positions = <31 32>;
        };

        under {
            bindings = <&kp UNDER>;
            key-positions = <28 31>;
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <4 7>;
        };
    };

    macros {
        save: save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp ESCAPE &kp COLON &kp W &kp ENTER>;

            label = "SAVE";
        };

        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp J &kp O &kp S &kp H &kp AT &kp J &kp O &kp S &kp H &kp B &kp L &kp A &kp I &kp S &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        home {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp DA_Q           &kp DA_W             &kp DA_E                    &kp DA_R                  &kp DA_T     &kp DA_Y   &kp DA_U              &kp DA_I              &kp DA_O              &kp DA_P              &none
&none  &weak LEFT_META A  &weak LEFT_ALT DA_S  &shifthr LEFT_CONTROL DA_D  &shifthr LEFT_SHIFT DA_F  &kp DA_G     &kp DA_H   &shifthr RSHIFT DA_J  &shifthr RCTRL DA_K   &weak RIGHT_ALT DA_L  &kp DA_A_RING         &none
&none  &kp DA_Z           &kp DA_X             &kp DA_C                    &kp DA_V                  &kp DA_B     &kp DA_N   &kp DA_M              &hm DA_SEMI DA_COMMA  &hm DA_COLON DA_DOT   &hm DA_AE DA_O_SLASH  &none
                                               &hm LC(BACKSPACE) ESCAPE    &lt 1 TAB                 &kp SPACE    &kp ENTER  &lt 2 BACKSPACE       &save
            >;

            label = "home";
        };

        right {
            bindings = <
&trans  &kp DA_N1             &kp DA_N2         &kp DA_N3     &kp DA_N4                &kp DA_N5          &kp DA_N6       &kp DA_N7  &kp DA_N8     &kp DA_N9  &kp DA_N0  &trans
&trans  &hm LEFT_META INSERT  &hm LEFT_ALT DEL  &hm LCTRL F7  &hm LEFT_SHIFT CAPSLOCK  &kp PRINTSCREEN    &kp LEFT_ARROW  &kp DOWN   &kp UP_ARROW  &kp RIGHT  &none      &trans
&trans  &trans                &trans            &trans        &kp LC(DA_C)             &kp LC(DA_V)       &kp C_AC_HOME   &kp PG_DN  &kp PG_UP     &kp END    &none      &trans
                                                &trans        &trans                   &trans             &trans          &trans     &trans
            >;

            label = "right";
        };

        left {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp DA_EXCL           &kp DA_AT                     &kp DA_POUND             &kp DA_DOLLAR                       &kp DA_PERCENT         &kp DA_CARET  &kp DA_AMPS   &kp DA_ASTRK  &kp DA_GRAVE  &kp DA_TILDE  &none
&none  &hm LEFT_META DA_DQT  &hm LEFT_ALT DA_LEFT_BRACKET  &hm LCTRL DA_LEFT_BRACE  &hm LEFT_SHIFT DA_LEFT_PARENTHESIS  &kp DA_LESS_THAN       &kp DA_FSLH   &kp DA_MINUS  &kp DA_EQUAL  &kp DA_COLON  &kp DA_SEMI   &none
&none  &kp DA_SQT            &kp DA_RIGHT_BRACKET          &kp DA_RIGHT_BRACE       &kp DA_RIGHT_PARENTHESIS            &kp DA_GREATER_THAN    &kp DA_BSLH   &kp DA_UNDER  &kp DA_PLUS   &kp DA_PIPE   &kp DA_QMARK  &none
                                                           &none                    &trans                              &trans                 &trans        &trans        &trans
            >;

            label = "left";
        };

        tri {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0  &trans  &trans  &kp C_MUTE    &kp C_PP        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 1  &trans  &trans  &kp C_VOL_UP  &kp C_NEXT      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 2  &trans  &trans  &kp C_VOL_DN  &kp C_PREVIOUS  &trans
                        &trans  &trans  &trans    &trans        &trans  &trans
            >;

            label = "tri";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
